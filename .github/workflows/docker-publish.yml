name: CI/CD Pipeline
run-name: Running pipeline for ${{ github.actor }}`s push

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  docker:
    name: Build and Push Application Image
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    outputs:
      image_digest: ${{ steps.get_digest.outputs.image_digest }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Determine image tags
        id: tags
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # For tags, use the tag name (without refs/tags/ prefix)
            TAG_NAME=${GITHUB_REF#refs/tags/}
            echo "tags=ghcr.io/${{ github.repository_owner }}/github-mcp-server:$TAG_NAME,ghcr.io/${{ github.repository_owner }}/github-mcp-server:latest" >> $GITHUB_OUTPUT
            echo "Using tag: $TAG_NAME"
          else
            # For main branch, use the branch name
            echo "tags=ghcr.io/${{ github.repository_owner }}/github-mcp-server:${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "Using branch: ${{ github.ref_name }}"
          fi
      
      - name: Build and push application image
        id: build
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=ghcr.io/${{ github.repository_owner }}/github-mcp-server:${{ github.ref_name }},push=true

      - name: Get image digest
        id: get_digest
        run: |
          # Extract digest from build output metadata
          IMAGE_DIGEST="${{ steps.build.outputs.digest }}"
          
          # Fallback: if build output doesn't have digest, inspect the image
          if [ -z "$IMAGE_DIGEST" ]; then
            echo "Build output digest not found, inspecting image..."
            IMAGE_DIGEST=$(docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/github-mcp-server:${{ github.ref_name }} | grep "Digest:" | head -1 | awk '{print $2}')
          fi
          
          echo "image_digest=$IMAGE_DIGEST" >> "$GITHUB_OUTPUT"
          echo "Using digest: '$IMAGE_DIGEST'"
